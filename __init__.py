from llpy import HttpServer, logger, setInterval, mc, ll

from config import load_config
from event import EventForwarder
from handler import Handler
from websocket import WebSocket
from api import APIHandler


ll.registerPlugin("EventBridge", "转发事件 & 开放API", [0, 0, 1])


logger.info("EventBridge is initializing...")

config = load_config()
handler = Handler(config["Timeout"])
websocket = WebSocket(config["WebSocketAddress"], config["Token"], handler)
http_server = HttpServer()
event_forwarder = EventForwarder(websocket, config["ForwardEvents"])
http_server.listen(config["HttpHost"], config["HttpPost"])
api_handler = APIHandler(http_server, mc, config["Token"], handler)

setInterval(websocket.reconnect, config["ReconnectInterval"] * 1000)
setInterval(websocket.heartbeat, config["HeartbeatInterval"] * 1000)


mc.listen("onPreJoin", event_forwarder.on_pre_join)
mc.listen("onJoin", event_forwarder.on_join)
mc.listen("onLeft", event_forwarder.on_left)
mc.listen("onRespawn", event_forwarder.on_respawn)
mc.listen("onPlayerDie", event_forwarder.on_player_die)
mc.listen("onPlayerCmd", event_forwarder.on_player_cmd)
mc.listen("onChat", event_forwarder.on_chat)
mc.listen("onChangeDim", event_forwarder.on_change_dim)
mc.listen("onJump", event_forwarder.on_jump)
mc.listen("onSneak", event_forwarder.on_sneak)
mc.listen("onAttackEntity", event_forwarder.on_attack_entity)
mc.listen("onAttackBlock", event_forwarder.on_attack_block)
mc.listen("onUseItem", event_forwarder.on_use_item)
mc.listen("onUseItemOn", event_forwarder.on_use_item_on)
mc.listen("onUseBucketPlace", event_forwarder.on_use_bucket_place)
mc.listen("onUseBucketTake", event_forwarder.on_use_bucket_take)
mc.listen("onTakeItem", event_forwarder.on_take_item)
mc.listen("onDropItem", event_forwarder.on_drop_item)
mc.listen("onEat", event_forwarder.on_eat)
mc.listen("onAte", event_forwarder.on_ate)
mc.listen("onConsumeTotem", event_forwarder.on_consume_totem)
mc.listen("onEffectAdded", event_forwarder.on_effect_added)
mc.listen("onEffectUpdated", event_forwarder.on_effect_updated)
mc.listen("onStartDestroyBlock", event_forwarder.on_start_destroy_block)
mc.listen("onDestroyBlock", event_forwarder.on_destroy_block)
mc.listen("onPlaceBlock", event_forwarder.on_place_block)
mc.listen("afterPlaceBlock", event_forwarder.after_place_block)
mc.listen("onOpenContainer", event_forwarder.on_open_container)
mc.listen("onCloseContainer", event_forwarder.on_close_container)
mc.listen("onInventoryChange", event_forwarder.on_inventory_change)
mc.listen("onChangeSprinting", event_forwarder.on_change_sprinting)
mc.listen("onSetArmor", event_forwarder.on_set_armor)
mc.listen("onUseRespawnAnchor", event_forwarder.on_use_respawn_anchor)
mc.listen("onOpenContainerScreen", event_forwarder.on_open_container_screen)
mc.listen("onExperienceAdd", event_forwarder.on_experience_add)
mc.listen("onPlayerPullFishingHook", event_forwarder.on_player_pull_fishing_hook)
mc.listen("onBedEnter", event_forwarder.on_bed_enter)
mc.listen("onMobDie", event_forwarder.on_mob_die)
mc.listen("onMobHurt", event_forwarder.on_mob_hurt)
mc.listen("onEntityExplode", event_forwarder.on_entity_explode)
mc.listen("onMobTrySpawn", event_forwarder.on_mob_try_spawn)
mc.listen("onMobSpawned", event_forwarder.on_mob_spawned)
mc.listen("onProjectileHitEntity", event_forwarder.on_projectile_hit_entity)
mc.listen("onWitherBossDestroy", event_forwarder.on_wither_boss_destroy)
mc.listen("onRide", event_forwarder.on_ride)
mc.listen("onStepOnPressurePlate", event_forwarder.on_step_on_pressure_plate)
mc.listen("onSpawnProjectile", event_forwarder.on_spawn_projectile)
mc.listen("onProjectileCreated", event_forwarder.on_projectile_created)
mc.listen("onChangeArmorStand", event_forwarder.on_change_armor_stand)
mc.listen("onEntityTransformation", event_forwarder.on_entity_transformation)
mc.listen("onBlockInteracted", event_forwarder.on_block_interacted)
mc.listen("onBlockChanged", event_forwarder.on_block_changed)
mc.listen("onBlockExplode", event_forwarder.on_block_explode)
mc.listen("onRespawnAnchorExplode", event_forwarder.on_respawn_anchor_explode)
mc.listen("onBlockExploded", event_forwarder.on_block_exploded)
mc.listen("onFireSpread", event_forwarder.on_fire_spread)
mc.listen("onCmdBlockExecute", event_forwarder.on_cmd_block_execute)
mc.listen("onContainerChange", event_forwarder.on_container_change)
mc.listen("onProjectileHitBlock", event_forwarder.on_projectile_hit_block)
mc.listen("onRedStoneUpdate", event_forwarder.on_red_stone_update)
mc.listen("onHopperSearchItem", event_forwarder.on_hopper_search_item)
mc.listen("onHopperPushOut", event_forwarder.on_hopper_push_out)
mc.listen("onPistonTryPush", event_forwarder.on_piston_try_push)
mc.listen("onPistonPush", event_forwarder.on_piston_push)
mc.listen("onFarmLandDecay", event_forwarder.on_farm_land_decay)
mc.listen("onUseFrameBlock", event_forwarder.on_use_frame_block)
mc.listen("onLiquidFlow", event_forwarder.on_liquid_flow)
mc.listen("onScoreChanged", event_forwarder.on_source_changed)
mc.listen("onTick", event_forwarder.on_tick)
mc.listen("onConsoleCmd", event_forwarder.on_console_cmd)
mc.listen("onConsoleOutput", event_forwarder.on_console_output)
